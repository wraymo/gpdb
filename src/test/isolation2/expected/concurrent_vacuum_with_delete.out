create extension if not exists gp_inject_fault;
CREATE

create table sales_row (id int, date date, amt decimal(10,2)) with (appendonly=true) distributed by (id) partition by range (date) ( start (date '2008-01-01') inclusive end (date '2009-01-01') exclusive every (interval '1 month') );
CREATE

insert into sales_row values (generate_series(1,1000),'2008-01-01',10);
INSERT 1000
update sales_row set amt = amt + 1;
UPDATE 1000

select gp_inject_fault('vacuum_hold_lock', 'suspend', dbid) from gp_segment_configuration where role = 'p' and content = -1;
 gp_inject_fault 
-----------------
 Success:        
(1 row)

1&: vacuum sales_row_1_prt_1;  <waiting ...>

select gp_wait_until_triggered_fault('vacuum_hold_lock', 1, dbid) from gp_segment_configuration where role = 'p' and content = -1;
 gp_wait_until_triggered_fault 
-------------------------------
 Success:                      
(1 row)

2&: delete from sales_row;  <waiting ...>

select pg_sleep(2);
 pg_sleep 
----------
          
(1 row)

select gp_inject_fault('vacuum_hold_lock', 'reset', dbid) from gp_segment_configuration where role = 'p' and content = -1;
 gp_inject_fault 
-----------------
 Success:        
(1 row)

1<:  <... completed>
VACUUM
2<:  <... completed>
DELETE 1000

1q: ... <quitting>
2q: ... <quitting>

-- cached plan

drop table sales_row;
DROP
create table sales_row (id int, date date, amt decimal(10,2)) with (appendonly=true) distributed by (id) partition by range (date) ( start (date '2008-01-01') inclusive end (date '2009-01-01') exclusive every (interval '1 month') );
CREATE

insert into sales_row values (generate_series(1,1000),'2008-01-01',10);
INSERT 1000
update sales_row set amt = amt + 1;
UPDATE 1000



1: prepare test as delete from sales_row;
PREPARE

select gp_inject_fault('vacuum_hold_lock', 'suspend', dbid) from gp_segment_configuration where role = 'p' and content = -1;
 gp_inject_fault 
-----------------
 Success:        
(1 row)

2&: vacuum sales_row_1_prt_1;  <waiting ...>

select gp_wait_until_triggered_fault('vacuum_hold_lock', 1, dbid) from gp_segment_configuration where role = 'p' and content = -1;
 gp_wait_until_triggered_fault 
-------------------------------
 Success:                      
(1 row)

1&: execute test;  <waiting ...>

select pg_sleep(2);
 pg_sleep 
----------
          
(1 row)

select gp_inject_fault('vacuum_hold_lock', 'reset', dbid) from gp_segment_configuration where role = 'p' and content = -1;
 gp_inject_fault 
-----------------
 Success:        
(1 row)

1<:  <... completed>
EXECUTE 1000
2<:  <... completed>
VACUUM

1q: ... <quitting>
2q: ... <quitting>

drop table sales_row;
